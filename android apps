Download JDK:

1. https://www.google.com/search?client=firefox-b-d&q=download+jdk
2. go to  Java SE Development Kit 
3. download .exe for windows
4. download android studio
5. download apowermirror
6. .java for functionality & .xml for design


RES folder:

  drawable : contain all image in here
  layout : contain all xml file
  minmap : cantain version screen size related image
  value : contain color,string & style variable name
  
manifast file:

  declair launcher java file for run
  
.java file:

1. in oncreate method declair which xml file will load


.xml file:

view:

1. layout - can contain multiple group view

            orientation - vertical or horizontal [horizontal allow child side by side]

            content - declair package name & connected class name
            
            background: "@color/red"
            
            screenOrientational="landscape" [allow rorate]
            
            oriantation="vertical" [show all one after one]
            
            gravity = center [line-height]

   groupview - can view contain multiple view

   view - it will contain single view

   textWidget:
   
            id = "@+id/id_name here"
            
            layout_width = wrap content (adjust width) | match parents [display block]
            
            text = "@string/text_name" [\n for next line]
            
            padding = 10dp
            
            layout_marginLeft = '10dp'
            
            textSize = 10sp
            
            textStyle = "bold"
            
            textColor = "@color/color_name"
            
            textAllCaps = true
            
            textAlign = center
            
            textisSelectable = true
            
            textcolorhighlight = "@color/color_name" [for hightlight color after selection]
            
            background = "@color/color_name"
            
            for color you can also use this link: https://stackoverflow.com/questions/6674183/storing-hex-color-values-in-strings-xml
            
            
            
            
   scrollview: you can replace full text view widget in scroll view part. it will be scoll auto.         
            
   button widget:
   
        <button
          
          all same like text widget
          
          drawableLeft="@drawable/image" [for add image in button]
        
        >
            
        <Imagebutton
          all same like text widget
          src="@drawable/image"
        > 
            
    image src:
    
    <ImageView
        android:id="@+id/image1"
        android:layout_width="wrap_content" 
        android:layout_height="wrap_content"
        android:src="@drawable/imagep1" 
        scaleType="position" 
       />
    
    
    Input field:
    
        <EditText
            android:id="@+id/edittext"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:layout_alignLeft="@+id/button"
            android:layout_below="@+id/textView1"
            android:layout_marginTop="61dp"
            android:ems="10"
            android:inputType="text"
            android:hint="GUGU TYPE HERE SOMETHINGS"
            />
    
        get data from input field:
        
        String inputData = edittext.getText().toString();
        
     Checkbox:
    
     <CheckBox  
        android:id="@+id/checkBox3"  
        android:layout_width="wrap_content"  
        android:layout_height="wrap_content"  
        android:layout_marginLeft="144dp"  
        android:layout_marginTop="28dp"  
        android:text="Burger"  
        app:layout_constraintStart_toStartOf="parent"  
        app:layout_constraintTop_toBottomOf="@+id/checkBox2" />  
        
        
     public void burgerCheck(View v){
        CheckBox coffe = (CheckBox) findViewById(R.id.checkBox2);
        CheckBox burger = (CheckBox) findViewById(R.id.checkBox3);

        TextView myAwesomeTextView = (TextView)findViewById(R.id.myAwesomeTextView);
        myAwesomeTextView.setText("Muri kha gugu");
    }
   
  .java file:
  
  1. first create property of the text view
  
     protected TextView NewTextViewForText;
     
     protected TextView NewTextViewForAge;
     
     (TextView) fildViewById(r.id.nameTextViewId); [set a typehint & get the id]
     
     NewTextViewForText.setText("set this text new");
     
     NewTextViewForText.setText(20);
     
     
 2. on click:
 
      Handler handler = new Handler();               [create a class for on click]
      
      NewTextViewForText.onclikclistener(handler);   [now add event with property]
      
      
      class Handler implements View.onclicklistener(){
      
         public void onlcick(View v){
         
            if(v.getId() == R.id.TextId){
              NewTextViewForText.setText("on click text");
            }
            
         }
      
       }
      
   or ::::::::::::   
      
      android:onclick = "showMessage"         [set this is xml file]
      
      public void showMessage(View v){
         
            if(v.getId() == R.id.TextId){
              NewTextViewForText.setText("on click text");
            }
            
         }
   



CODE ONCLICK :::::::::::::::::::::::::::::::::


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical" >

    <Button android:id="@+id/btnStartService"
        android:layout_width="270dp"
        android:layout_height="wrap_content"
        android:text="start_service"/>



    <Button android:id="@+id/btnStopService"
        android:layout_width="270dp"
        android:layout_height="wrap_content"
        android:text="Gugu"
        android:onClick="showData"/>

    <TextView
        android:id="@+id/myAwesomeTextView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:text="GUGU hates me"
        android:textSize="20sp"/>
</LinearLayout>





package com.example.android;

import android.os.Bundle;
import android.app.Activity;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends Activity {

    private Button btnStopService,btnPauseService;
    private TextView myAwesomeTextView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
    public void showData(View v){
        TextView myAwesomeTextView = (TextView)findViewById(R.id.myAwesomeTextView);
        myAwesomeTextView.setText("Muri kha gugu");
    }
}

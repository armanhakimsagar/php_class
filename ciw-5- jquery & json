CIW 4 ( JQERY )








WordPress

Database - ciw
Username - root
Password - ' '
Host - localhost

_______



22 & 23 & 24

Selector

Method

Function

Script src

______

**1st all task -- All click alert 


**2nd all task -- 


Do --- mouseover 


Classwork --- mouseout



span p


#id


.class


span.big


.big , .small   [ a or b ]


#id.small      [a and b]


ul li:nth-child(2) a


'[title]'


'a[title]'


'div[title][style]'


'a[href="#"]'


'[href='#']'


'[href != '#']'


'[ title *= 'discount' ]' (must contain word)


'[ title ^= 'div' ]' (word start with div)


'[ title $= 'div' ]' ( word end with div )


 "span[title][style]" (need both)


'div[title],[style]'   [ between two ]


'div[title='1'],[style='bg']'



_____



**2nd all task -- 


#click  $("p").hide(1000);


#div click .toggle(400)


#.toggle(function(){
			
    alert("this is callback function");	
		

});



#Click fadeOut(4000)  [ hide ]


#Click fadeIn(4000)     [ show ]


#Click fadeToggle


#Click fadeTogggle(5000) [slide]


#Click slideup(2000) [slide]


#Click slideToggle(2000) [slide]


#Click html( ' <h1>hellow</h1>' )


[ Means innerhtml ]


#CSS ({' color: ' : ' #f00 ' , })


#$('p').eq(1).css{( 'color' : 'red' )}


#[Eq is index number]


#$('p').filter('.class').css{( 'color' : 'red' )}


[ Filter the value ]


#Click addclass('classname')


#Click $('a').after('hello')


[ add value after element ]


#Click $('a').append(' hellow')


[ add value inside element ]


#Click width('100px')


#Click height('100px')


#attr('type' , 'text')


[Make checkbox and change value]


#.val()


#$("input").prop('checked', true);


after onclick check all box






_______




**** go to top


**** Increase input fields on click


**** Make prothom alo part ESPN


**** go to top & onload image


**** Increase input fields on click


**** Make prothom alo part





Wow slider :
__________



Make folder

Drag all image is folder

Now generate and save HTML in folder

just change the picture for jolcap






Video customize :
_______________


<button onclick="playVid()" type="button">Play Video</button>

<button onclick="pauseVid()" type="button">Pause Video</button>

<button onclick="fast()" type="button">fast</button>

<button onclick="volume()" type="button">volume</button>

<video id="myVideo" width="320" height="176">

  <source src="mov_bbb.mp4" type="video/mp4">
  
</video>

<script> 

var vid = document.getElementById("myVideo"); 

function playVid() { 
    vid.play(); 
} 

function pauseVid() { 
    vid.pause(); 
} 

function fast() { 
    vid.currentTime += 1; 
} 

function volume() { 
    vid.volume += 1; 
}
 
</script> 




________________________________


JSON:

JSON is a syntax for storing and exchanging data.



** Stringify(become string)
** parse (become object)

	Use the JavaScript function JSON.stringify() to convert object or array into a string.
	It basically use to setitem in browser.
	When sending data to a web server, the data has to be a string.
	For use any strigify data parse it.
	When receiving data from a web server, the data is always a string.
	Parse the data with JSON.parse(), and the data becomes a JavaScript object.

	// Storing data:
	myObj = {name: "John", age: 31, city: "New York"};
	myJSON = JSON.stringify(myObj);
	localStorage.setItem("testJSON", myJSON);

	// Retrieving data:
	text = localStorage.getItem("testJSON");
	obj = JSON.parse(text);
	document.getElementById("demo").innerHTML = obj.name;


** json_encode (PHP object to json):

	Objects in PHP can be converted into JSON by using the PHP function json_encode():

** json_decode (json to PHP object)

** getJSON (Get JSON data using an AJAX request)
  
   $.getJSON("demo_ajax_json.js", function(result){
      $.each(result, function(i, field){
        $("div").append(field + " ");
      });
    });

**  load txt file on ajax:

    $("#div1").load("demo_test.txt");

**
$.post()

The $.post() method requests data from the server using an HTTP POST request.

**
$.get()

The $.get() method requests data from the server with an HTTP GET request.
** 
    text() - Sets or returns the text content of selected elements
    html() - Sets or returns the content of selected elements (including HTML markup)
    val() - Sets or returns the value of form fields

**
serialize()

Serialize form value data in string.

**
serializeArray()

Serialize form value data in to array.

**

AJAX

contentType:  sending data to the server

data       :  Specifies data to be sent to the server

dataType   :  The data type expected of the server response.

type       :  Specifies the type of request. (GET or POST)

url        :  Specifies the URL to send the request to. Default is the current page

dataType   :  The data type expected of the server response.

async      :  A Boolean value indicating whether the request should be handled asynchronous or not. Default is true

cache      :  A Boolean value indicating whether the browser should cache the requested pages. Default is true


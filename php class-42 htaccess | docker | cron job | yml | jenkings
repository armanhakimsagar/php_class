.htaccess


RewiteEngine On

DirectoryIndex main.php                   (index file here)

IndexIgnor *.txt *.png                    (hide all txt & png file)

AddtType application/x-httpd-php .ulala (.ulala wil work like php)




________________________________________________


cron job is list of schedule for server
crontab is file name which contain task

very simple it 1 row have 6 column : 

minute hour day month  day_of_the_week  file name
2       *   *    *          *           /message.sh

if your server dont support crone job can use online crone job for load the file.
such :
cron job org
easy cron



__________________________________________________


yml 


YAML stands for YAML Ain't Markup Language.

use for create : configuration files , metadata

.yaml .yml


define child :

    Sports: 
           name : 'Sachin Tendulkar'
           name : 'Rahul Dravid'

        
define item :

    Sports: cricket
            - Sachin Tendulkar
            - Rahul Dravid
            - M S Dhoni
            
           
           
define array :

Sports: ['Sachin Tendulkar' , 'Rahul Dravid' , 'M S Dhoni']



______________________________________________________________


docker



https://www.youtube.com/watch?v=VMLP2V6Qfm0
************** RAW PHP :

https://blog.anam.co/docker-in-bangla/

Docker is tool.
কোন এপ্লিকেশন আপনি তার প্রায় সব ডিপেন্ডেন্সি সহ শিপ করতে চাইলে ডকার খুব ভালো টুল। 
প্রায় বেশীভাগ ডকার ইমেজ পোর্টেবল আর অলমোস্ট প্লাটফর্ম ইন্ডিপেন্ডেন্ট 


__________________________________________________________________________


Dockerfile : ডকার ফাইল একটা ডকার ইমেজ তৈরী করার ইনসট্রাকশন

 FROM ubuntu:16.04   					(প্রতিটা ডকার ইমেজ অন্য কোন একটা বেস ইমেজ থেকে তৈরী হয়)
 
  LABEL MAINTAINER Anam Ahmed				( ইমেজ নিয়ে এক্সট্রা ইনফরমেশন দেয়ার জন্য (ভার্শন, কে বানিয়েছে) ব্যাবহার করা হয়)
  
  RUN apt-get update && apt-get install -y nginx	(উবুন্টুর প্যাকেজ ম্যানেজার apt দিয়ে nginx ওয়েব সার্ভার এপ্লিকেশন ইনস্টল করেছি)
  
  WORKDIR /var/www/html					(ওয়ার্কিং ডিরেক্টরী)
  
  COPY . /var/www/html					 বিল্ড কনটেক্সট থেকে চাইলে যেকোন ফাইল আপনার ডকার ইমেজে কপি করে নিয়ে যেতে পারেন। 
  
  EXPOSE 80
  
  CMD ["nginx","-g","daemon off;"]			আপনার কমান্ড বন্ধ হয়ে গেলে কিন্তু আপনার কনটেইনার বন্ধ হয়ে যাবে। তাই একটা কমান্ড চালিয়ে রাখতে হবে। উপরের কমান্ডে nginx সার্ভার daemon হিসেবে না চলে ফোরগ্রাউন্ডে চলবে, যেন আপনার কনটেইনার বন্ধ হয়ে না যায়।



______________________________________________________________________


Image : ইমেজ ব্যাবহার করতে হলে ইমেজ থেকে একটা কনটেইনার চালু করতে হবে

উপরের স্যাম্পল ডকার ফাইলটা একটা ফোল্ডার বানিয়ে সেটাতে Dockerfile (কোন এক্সটেনশন নাই) তৈরী করে রেখে দিন, 
সাথে একটা index.html ফাইল 
বানায়ে ভিতরে কিছু লিখে রাখেন সেই ফোল্ডারে
ইমেজের ট্যাগ theanam/dockersample

now run create image : docker build -t theanam/dockersample .

now run container : docker run --name mycontainer -p 8080:80  theanam/dockersample

browser : http://localhost:8080



______________________________________________________________________


Laravel Doc :

https://www.youtube.com/watch?v=TQii1jDa96Y




______________________________________________________________________




Docker daemon : It is a process which is used to listen for Docker API requests. 
                It also manages Docker objects like: images, container, network etc. 
		A daemon can also communicate with other daemons to manage Docker services.

Docker Registries : Docker Hub and the Docker Cloud

image : is snapshot of a container. application list. we can publish it with project.

container : running instance of image. it run image & create env

docker client : The Docker client is the primary way that many Docker users interact with Docker.
                its for start stop docker

docker engine : tools for run docker container

docker compose : its for run multiple container.

docker kitematic : docker gui


team work : 

developer use :

1st member create project with docker env. 
all member download the project auto install env.
Its best for version management (all developer pc).

operator use :



commands :

docker images	: show total images list in os

docker ps 	: running & all container list

sudo apt-get install docker.io 

sudo docker version

docker built -t folder/folder  	[create docker]

docker run -d -P folder/folder 	[run specific container]

docker ps		       	[now check port of running container]

docker-machine ip		[get machine ip]

docker-machine create --driver vurtualbox dev-box







About docker :

 It onek kind of vm but depends on main operating system.
 creating some task list for single project. 
 it will not conflict with other project.
 if docker on project all software will active & it will run.
 docker-compose.yml is task list.
	 
	benifits :
	
	0. when we publish code with docker it create its own env & support all os & dont conflict with anyone.
	
	0. no need any apache, you can run docker from anywhere
	
	1. install differnt differnt software in docker for differnt project.
	   it will not conflict with each other.
	   
	2. it help project in deployemnt issue.
	   if docker run in docker it will run in every differnt platfrom 
	  
docker vs vm : 	

* its called containerization.

* we can create a docker.yml file for list of install software.
  after run .yml file it create a image in dokcer folder.
  image is a app or instance.
  every vm or os have app.

* now work in docker. after complete you can up it in docker hub just like git

* its depends on main operating system. (vm depends on vm operation system)

* space is not fixed , its flexible

* container software will not conflict with other container
  its a separate container for any project. 
  if docker delete project container will be deleted.
  
* Docker File : docker-compose.yml : its a file contain all task for the project  
  
* after run the docker file you will get a image (instance of docker file).
  image is nothing but a random string.
  run image for get into container





CODE :




install :

sudo apt update

sudo apt install apt-transport-https ca-certificates curl software-properties-common

sudo gedit /etc/apt/sources.list.d/docker.list

curl -fsSL https://download.docker.com/linux/ubu... | sudo apt-key add -

curl -fsSL https://download.docker.com/linux/ubu... | sudo apt-key add -

sudo apt update

sudo apt install docker-ce


sudo docker run hello-world


________________


image :

* list of application
 
* Create a Dockerfile in your PHP project

* this docker file is list of image

* docker file : 

RUN apt-get update
RUN apt-get -y upgrade
RUN docker-php-ext-install mysqli




_______________


conatainer :

* run image for create container

* docker build -t="containername" .

* run container : docker run -d -p 8080:80 containername

* docker ps 	[for see running container list]

*

____________________________________________________________________________________


Docker :

install :

* composer create-project --prefer-dist laravel/laravel blog

* cd blog

* docker-compose up -d

* docker-compose ps

* Create a new Laravel application

	docker run -it --rm \
	    -v $(pwd):/opt \
	    -w /opt \
	    --network=phpapp_appnet \
	    shippingdocker/php \
	    composer create-project laravel/laravel application
	    
* 

_________________________________________________________________



Jenkins - 
    Jenkins is a software that allows continuous integration
    Many developer work in same project they continuous integration in it.
    after commit code jenking auto sink changes to CI server.
    then jenkings build the code , test it & deploy it .
    Jenkins is java application
    
Work flow :

    . jenkings install in server
    . developer create acount on git
    . now jenkings will allow which brach will live in which ip
    . developer push code to github
    . jenkings auto sink after change any changes or it will sink after a period of hour
    . CI (continuous integration) server text bug then output it      
    
    
    
    
    
Facilities :

  1.  many people work not same file.
      after commit it trigger a built. 
      so if any error it will not upload file. it will notify for merge or remove.
      its helps for error less upload & code will not break.
     
  2.  it automated sometest php unit, nunit etc
  
  3.  jenkings can integrate with git.
      so if you upload file in git it will show our website live.
      you dont need to access in server.
      
  4.  you can set upload time
  
  5. you can use tomcat. Apache Tomcat allows the implementation of Java Servlets and JavaServer Pages (JSP) 
     to promote an effective Java server environment.
     
     
     
 
 Coding :
 
 install :
 
    sudo apt-get install jenkins
    
 Start :
 
    sudo systemctl start jenkins
 
 Opening the Firewall :
    
    sudo ufw status
    sudo ufw allow 8080
    sudo ufw allow OpenSSH
    sudo ufw enable
 
 http://ip_address_or_domain_name:8080
 
 
 _______________________________
 
 Jenkings with git :
 
 https://www.youtube.com/watch?v=bGqS0f4Utn4
 
 1. install jenkings in server.
 
 2. create project
    create a job (like cron job)
    link folder or git link on creating project
    
provide developer jenkings folder link to developer



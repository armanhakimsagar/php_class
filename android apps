Download JDK:

1. https://www.google.com/search?client=firefox-b-d&q=download+jdk
2. go to  Java SE Development Kit 
3. download .exe for windows
4. download android studio
5. download apowermirror
6. .java for functionality & .xml for design


Activity: In apps single screen is activity. All activity create 2 file Java & xml. 
          Single activity have 7 method.
          
  onCreate : when activity created
  
  onStart : when activity visible on user screen
  
  onResume: when user can interact
  
  onpulse: when activity not visible or close
  
  onclose: when activity not visible or close then onpulse then onclose
  
  onRestart: when activity close then start its called onrestart
  
  onDestroy : when back button click for close onpulse then onclose then onDestroy


manifest file:

    its a core file for set all setting of a apps.
    androidmanifest.xml
    
    
    
Intent filter:

    Intent is for call start service or launch activity or disply page.
    
    Its a tag. When we run apps in manifest file if a activity contain internt-filter that will open first.
    
    This tag will decide in menifast file which activity will laungh first.
    
    Intent also work for link between 2 activity. <a href></a>
    
    In onclick method:
         
         Intent newActivityIntent = new Intent(current_Activty.this, Old_activty.class);
         
         //for pass data in get method
         
         Intent.putExtra("key","value");
         
         // Start the new activity.
          
         startActivity(newActivityIntent);
         
         // for get value
         
         Intent.getIntent("key");
    
    
Service : 

          its a background process.
          any you want to run in bg.
 
contain provider:

          used to share data between application.
          
RES folder:

  drawable : contain all image in here
  layout : contain all xml file
  minmap : cantain version screen size related image
  value : contain color,string & style variable name

style.xml file:

1. declair all the theme name here & set theme configurations

 <style name="AppTheme.NewthemeNameHere">

        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/Aqua</item>
        <item name="colorPrimaryDark">@color/DarkGreen</item>
        <item name="colorAccent">@color/lighter_gray</item>
        <item name="android:textColorPrimary">@color/white</item>
        <item name="android:colorPrimaryDark">@color/holo_red_dark</item>
        <item name="android:navigationBarColor">@color/black</item>
        <item name="windowNoTitle">true</item>
        <item name="windowActionBar">false</item>
        <item name="actionBarTheme">@null</item>
      
</style>


  Set theme name in layout file:

    android:theme="@style/AppTheme.NewthemeNameHere"








manifast file:

  declair launcher java file for run
  
.java file:

0. create java file for every different activity.
   If java file create autometically layout file will be created.
   

1. in oncreate method declair which xml file will load


.xml file:

view:

Width calculation:

0. For width calculation set widthSum in parents div. [same like col span, this is total col span]

   layout_width = 1                                   [set col span 1]

1. layout - can contain multiple group view

            orientation - vertical or horizontal [horizontal allow child side by side]

            content - declair package name & connected class name
            
            background: "@color/red"
            
            screenOrientational="landscape" [allow rorate]
            
            oriantation="vertical" [show all one after one]
            
            gravity = center [line-height]

   groupview - can view contain multiple view

   view - it will contain single view

   textWidget:
   
            id = "@+id/id_name here"
            
            layout_width = wrap content (adjust width) | match parents [display block]
            
            text = "@string/text_name" [\n for next line]
            
            padding = 10dp
            
            layout_marginLeft = '10dp'
            
            textSize = 10sp
            
            textStyle = "bold"
            
            textColor = "@color/color_name"
            
            typeface = ""                     [font family]
            
            download ttf from https://www.fontsquirrel.com/
            
            now paste .ttf file in: app/res/font
            
            textAllCaps = true
            
            textAlign = center
            
            textisSelectable = true
            
            textcolorhighlight = "@color/color_name" [for hightlight color after selection]
            
            background = "@color/color_name"
            
            for color you can also use this link: https://stackoverflow.com/questions/6674183/storing-hex-color-values-in-strings-xml
            
            
            
            
   scrollview: you can replace full text view widget in scroll view part. it will be scoll auto.         
            
   button widget:
   
        <button
          
          all same like text widget
          
          drawableLeft="@drawable/image" [for add image in button]
        
        >
            
        <Imagebutton
          all same like text widget
          src="@drawable/image"
        > 
            
    image src:
    
    <ImageView
        android:id="@+id/image1"
        android:layout_width="wrap_content" 
        android:layout_height="wrap_content"
        android:src="@drawable/imagep1" 
        scaleType="position" 
       />
    
    
    Input field:
    
        <EditText
            android:id="@+id/edittext"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:layout_alignLeft="@+id/button"
            android:layout_below="@+id/textView1"
            android:layout_marginTop="61dp"
            android:ems="10"
            android:inputType="text"
            android:hint="GUGU TYPE HERE SOMETHINGS"
            />
    
        get data from input field:
        
        String inputData = edittext.getText().toString();
        
     Checkbox:
    
     <CheckBox  
        android:id="@+id/checkBox3"  
        android:layout_width="wrap_content"  
        android:layout_height="wrap_content"  
        android:layout_marginLeft="144dp"  
        android:layout_marginTop="28dp"  
        android:text="Burger"  
        app:layout_constraintStart_toStartOf="parent"  
        app:layout_constraintTop_toBottomOf="@+id/checkBox2" />  
        
     
     // must set View v
     
     public void burgerCheck(View v){
        CheckBox coffe = (CheckBox) findViewById(R.id.checkBox2);
        CheckBox burger = (CheckBox) findViewById(R.id.checkBox3);

        TextView myAwesomeTextView = (TextView)findViewById(R.id.myAwesomeTextView);
        myAwesomeTextView.setText("Muri kha gugu");
    }
   
   
   Rating:
   
      <RatingBar
        android:id="@+id/simpleRatingBar"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:rating="3.5"
        android:numStars="6"
        android:background="#f00"
        android:stepSize="1.0"
        />
     
     
     RatingBar rb = (RatingBar) findViewById(R.id.rb);
        
     rb.setOnRatingBarChangeListener(new RatingBar.OnRatingBarChangeListener() {
            @Override
            public void onRatingChanged(RatingBar ratingBar, float rating, boolean fromUser) {
                tv.setText("Your Rating : " + rating);
            }
        });   
        
        
        
   <SeekBar  
        android:id="@+id/seekBar"  
        android:layout_width="match_parent"  
        android:layout_height="wrap_content"  />
        
   <switch
        drawableleft=""       [add image in left]
        text="for output"
   >
        
   <webview>                  [webview can load external website as apps]
   https://www.youtube.com/watch?v=4dSmROBY_Us&list=PLgH5QX0i9K3p9xzYLFGdfYliIRBLVDRV5&index=39
   
   
   video:
   
   1. take video tag
   
   2. get video id in java
   
   3. create a raw folder in res folder. paste video in here
   
   4. get video link & setVideo url in java file
   
   
   
   MENU:
   
   1. Create menu folder in res folder.
   
   2. now create menu_layout.xml file in there
   
   3. now create some item in there
   
   <item>
          android:id=""
          android:title= "Home"
          android:showAsAction = "never"
          android:icon = "drawable/index"         [for menu image]
   </item>
   
   4.
   In java file set onOptionItemSelected method for get selected menu index then redirect in that page.
   
   
   
   Gradiant color:
   
   generate gradient color from here : https://angrytools.com/gradient/
   
   
   
   
   
   
   android launcher icon:
   
   android:icon="@mipmap/ic_launcher"
   android:label="@string/app_name"
   android:roundIcon="@mipmap/ic_launcher_round"
        
   
   
   alert:
   
      AlertDialog dialog = new AlertDialog.Builder(c)
        .setTitle("Add a new task")
        .setMessage("What do you want to do next?")
        .setView(taskEditText)
        
        
        
  .java file:
  
  1. first create property of the text view
  
     protected TextView NewTextViewForText;
     
     protected TextView NewTextViewForAge;
     
     (TextView) fildViewById(r.id.nameTextViewId); [set a typehint & get the id]
     
     NewTextViewForText.setText("set this text new");
     
     NewTextViewForText.setText(20);
     
     
 2. on click:
 
      Handler handler = new Handler();               [create a class for on click]
      
      NewTextViewForText.onclikclistener(handler);   [now add event with property]
      
      
      
      if in on create method:
      
      Button button3 = findViewById(R.id.button3);
      
      button3.setOnClickListener(new View.OnClickListener() {
      
            @Override
            public void onClick(View v) {
      
                Intent newActivityIntent = new Intent(DashboardActivity.this, DashboardActivity.class);
                startActivity(newActivityIntent);
            
            }
            
      });
        
      
      class Handler implements View.onclicklistener(){
      
         public void onlcick(View v){
         
            if(v.getId() == R.id.TextId){
              NewTextViewForText.setText("on click text");
            }
            
         }
      
       }
      
   or ::::::::::::   
      
      android:onclick = "showMessage"         [set this is xml file]
      
      public void showMessage(View v){
         
            if(v.getId() == R.id.TextId){
              NewTextViewForText.setText("on click text");
            }
            
         }
   



CODE ONCLICK :::::::::::::::::::::::::::::::::


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:orientation="vertical" >

    <Button android:id="@+id/btnStartService"
        android:layout_width="270dp"
        android:layout_height="wrap_content"
        android:text="start_service"/>



    <Button android:id="@+id/btnStopService"
        android:layout_width="270dp"
        android:layout_height="wrap_content"
        android:text="Gugu"
        android:onClick="showData"/>

    <TextView
        android:id="@+id/myAwesomeTextView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:text="GUGU hates me"
        android:textSize="20sp"/>
</LinearLayout>



Link a href :

Intent newActivityIntent = new Intent(MainActivity.this, DashboardActivity.class);

startActivity(newActivityIntent);



package com.example.android;

import android.os.Bundle;
import android.app.Activity;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends Activity {

    private Button btnStopService,btnPauseService;
    private TextView myAwesomeTextView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
    public void showData(View v){
        TextView myAwesomeTextView = (TextView)findViewById(R.id.myAwesomeTextView);
        myAwesomeTextView.setText("Muri kha gugu");
    }
}






SQLLITE:

1. local database. (RDMS)
2. SQLopenhelper class
                           super method -> for create & mange database
                           
                           oncreate method -> called when first time database create (write here database )
                           
                           onupdate method -> when update database any table
                           
 3. getwrtieabledatabase class : help create or write in database
 
 4. tutorial 125 to last after windows
 
 
 
                    

INSERT :

1. Get input data from:
            
         nameEditText = (EditText) findViewById(R.id.nameEditText)

         nameInputValue=   nameEditText.getText().toString();
         
         
         ** Create a insert data method in database helper
         
         ** Create a method of contentValue for store data in single method
         
         contentValue.put();
         
         now databaseHelper.contentValue();
         
         
   2. Get data from database:
   
         

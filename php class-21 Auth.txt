
Route::::::
  
Route::get('login', 'Auth\LoginController@showLoginForm')->name('login');
Route::post('login', 'Auth\LoginController@login');
Route::get('logout', 'Auth\LoginController@logout')->name('logout');

// Registration Routes...
Route::get('register', 'Auth\RegisterController@showRegistrationForm')->name('register');
Route::post('register', 'Auth\RegisterController@register');



Registration Form::::::::


<form method="POST" action="{{route('register')}}">
        {{ csrf_field() }}
        <input type="text" class="form-control" id="name" name="name">
        <input type="email" class="form-control" id="email" name="email">
        <input type="password" class="form-control" id="password" name="password">
        <button style="cursor:pointer" type="submit" class="btn btn-primary">register</button>
</form>



Registration method::::::


public function register(){
	$this->validate(request(), [
	    'name' => 'required',
	    'email' => 'required|email',
	    'password' => 'required'
	]);

	$user = User::create(request(['name', 'email', 'password']));
}

    
    
In user model set password encryption::::::

use Illuminate\Support\Facades\Auth;
public function setPasswordAttribute($password)
{
   $this->attributes['password'] = bcrypt($password);
}



_______________


Login view ::::::::::::::


<form method="post" action="{{route('login')}}">
  {{ csrf_field() }}
        <input type="email" class="form-control" id="email" name="email">
        <input type="password" class="form-control" id="password" name="password">
        <button type="submit" class="btn btn-default">Login</button>
</form>



Login method::::::::::::::



use Illuminate\Support\Facades\Auth;


public function login(Request $request){

	 $this->validate($request,[
	    'email'=>'required|email',
	    'password'=>'required'
	]);

	dd(Auth::attempt(['email'=>$request['email'],'password'=>$request['password']]));

	if(!Auth::attempt(['email'=>$request['email'],'password'=>$request['password']])){
	    echo "not login";
	}

}



** multiple auth system ::::::::::::::::

/ create UserRolls table /

CREATE TABLE UserRolls(
 id int not null PRIMARY KEY AUTO_INCREMENT,
 user_id int not null,
 roll_id int not null,
 created_at timestamp,
 updated_at timestamp
)


/ in user model check id with userrolls table userid /


public function user_role() {
  return $this->hasOne(UserRoll::class,'user_id');
}






-> logout button create:

   <a href="{{ url('/logout') }}"> logout </a>
   
   

-> ADD EXTRA FIELD FOR REGISTRATION :


   add phone number	
	
   1. add field in database

   2. app\user add field in protected $fillable

   3. view (copy any part)
   
   4. add field in app\http\controller\auth\registercontroller.php (in protected function create)
  


   

-> SET CUSTOM ERROR :


any view under homecontroller will be auth

   <strong>

	{{ $errors->first('email') }}

        // set what u want

  </strong>





-> CHANGE credentials ERROR :


   resources/lang/en/auth.php


any view under homecontroller will be auth



__________________________


 <?php  dd(Auth::user()); ?>
 
__________________________


Check login or not:

if (Auth::check())
{

}

_____

Get id:

Auth::user()->id;

____

Make hash:

\Hash::make($request['password']);



______________________


EMAIL TO PHONE OR PHONE OR User FOR LOGIN:

protected function credentials(Request $request){

if(is_numeric($request->get('email'))){

  return ['phone'=>$request->get('email'),'password'=>$request->get('password')];

}

elseif (filter_var($request->get('email'), FILTER_VALIDATE_EMAIL)) {

  return ['email' => $request->get('email'), 'password'=>$request->get('password')];

}

return ['username' => $request->get('email'), 'password'=>$request->get('password')];

}


Try to login:

$credentials = [
   'username' => session('username'),
   'password' => session('password'),
];


__________


-> RECOVERY PASSWORD :

turn on less secure apps :

go to this link https://myaccount.google.com/security#connectedapps



go to this link generate password :

https://support.google.com/accounts/answer/185833?hl=en

turn on 2-Step-Verification || Visit your App passwords page & create apps



   

MAIL_DRIVER=smtp
MAIL_HOST=smtp.gmail.com
MAIL_PORT=587
MAIL_USERNAME=mail address
MAIL_PASSWORD=apppassword
MAIL_ENCRYPTION=tls 





-> Reset Password link :

   go to : vendor/laravel/framework/src/Illuminate/Auth/Notifications/ResetPassword.php
   
   public function toMail
   set this 	-> 	action('Reset Password', url(config('app.url').route('password.reset', $this->token, false)))
   to 		-> 	action('Reset Password', url('/').route('password.reset', $this->token, false))
   
   
-> Reset Heaader Footer :

   php artisan vendor:publish --tag=laravel-mail
   
   customize it : resources/views/vendor/mail/html
   
   
   

Auth Undo :


auth/login.blade.php
auth/register.blade.php
auth/passwords/email.blade.php
auth/passwords/reset.blade.php
layouts/app.blade.php
home.blade.php
web/route.php (remove auth route)
delete database tables (related to auth)
confiq/auth.php	 (reset guard | provider | password array)




Multi auth:


1. php artisan make auth

2. php artisan make:middleware MiddlewareName

namespace App\Http\Middleware;

use Closure;
use Auth;
use App\User;
use App\user_roll;

class Admin
{
    /**
     * Handle an incoming request.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Closure  $next
     * @return mixed
     */
    public function handle($request, Closure $next)
    {
        //dd(Auth::id());
        $roll = user_roll::where('user_id',Auth::id())->first();
        
        if($roll->roll_id == 1){
            return redirect('login1');
        }
        if($roll->roll_id == 2){
            return redirect('login2');
        }
    }
}
  
 3. 
 
 
 Route::group(['middleware'=>'admin'], function () {
	
	Route::get('login2', 'LoginController@ab')->name('data');
 });



___________________________________________________________






-> composer require hesto/multi-auth

-> app/Providers/AppServiceProvider.php add this :

   Create Index by defaultStringLength :
   
   https://laravel.com/docs/master/migrations#creating-indexes
  

   use Illuminate\Support\Facades\Schema;

    public function boot(){
    
       Schema::defaultStringLength(191);
    
    }
	
    public function register(){
    
	if ($this->app->environment() == 'local') {
		$this->app->register('Hesto\MultiAuth\MultiAuthServiceProvider');
	}
   }
	

-> Create Admin :

   php artisan multi-auth:install admin -f
   php artisan multi-auth:install employee -f
   php artisan multi-auth:install customer -f


-> php artisan migrate	

-> For Secure any page create AdminAuthController or CustomerAuthController in app\http\controller


<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class AdminAuthController extends Controller
{
    
    public function __construct()
    {
        $this->middleware('admin');
    }

    public function ViewScat(){
	return view('admin.subcategory');
    }
}



-> ADD EXTRA FIELD FOR REGISTRATION :


   add phone number	
	
   1. add field in database

   2. app\user add field in protected $fillable

   3. view (copy any part)
   
   4. add field in app\http\controller\auth\registercontroller.php (in protected function create)
  


   

-> SET CUSTOM ERROR :


any view under homecontroller will be auth

   <strong>

	{{ $errors->first('email') }}

        // set what u want

  </strong>

  
https://laravel.com/docs/5.5/validation

*. 'phone' => 'required|regex:/(01)[0-9]{9}/',

*. password =/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$/

   

*. password_confirmation match auto with password


-> CHANGE credentials ERROR :


   resources/lang/en/auth.php


any view under homecontroller will be auth




-> RECOVERY PASSWORD :

turn on less secure apps :

go to this link https://myaccount.google.com/security#connectedapps



go to this link generate password :

https://support.google.com/accounts/answer/185833?hl=en

turn on 2-Step-Verification || Visit your App passwords page & create apps



MAIL_DRIVER=smtp
MAIL_HOST=smtp.gmail.com
MAIL_PORT=587
MAIL_USERNAME=mail address
MAIL_PASSWORD=apppassword
MAIL_ENCRYPTION=tls 




-> Reset Password link :

   go to : vendor/laravel/framework/src/Illuminate/Auth/Notifications/ResetPassword.php
   
   public function toMail
   set this 	-> 	action('Reset Password', url(config('app.url').route('password.reset', $this->token, false)))
   to 		-> 	action('Reset Password', url('/').route('password.reset', $this->token, false))
   
   
-> Reset Heaader Footer :

   php artisan vendor:publish --tag=laravel-mail
   
   customize it : resources/views/vendor/mail/html

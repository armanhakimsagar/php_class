

*. Form :

<form method="post" action="{{ url('submit') }}">

    Name<input type="text" name="name">
    email<input type="text" name="email">
    phone<input type="text" name="phone">
    date<input type="date" name="date">
    password<input type="text" name="password">
    Retype <input type="text" name="password_confirmation">
    male<input type="radio" name="gender" value="male">
    female<input type="radio" name="gender" value="female">
    {{ csrf_field() }}
    <input type="submit" name="submit">
    
</form>



@if ($errors->has('password'))

   {{ $errors->first('password') }}
    
@endif


______________________________________________


-> Validation


public function submit(Request $request){

    	$validator = Validator::make($request->all(), [
	
	    'name' 	=> 'required|
	    		    regex:/^[a-zA-Z\s]+$/',
	    'email' 	=> 'required|email',
	    'phone' 	=> 'required|
	    		    regex:/^[0-9\s]{11}+$/',
	    'date' 	=> 'date_format:Y-m-d',
	    'password' 	=> 'confirmed|min:6|max:8|
	    		    regex:/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$/',
	    'gender' 	=> 'required'
	    
	]);

	if ($validator->fails()) {
            return redirect('admin/meeting')
                            ->withErrors($validator)
                            ->withInput();
            } else { else {
                
                echo "ok";
         }
    }



-> Error show:

@if ($errors->has('title'))

   {{ $errors->first('title') }}
                                
@endif


-> old value show:

value="{{ old('title') }}" 

-> Insert:

$meeting                = new meeting;
$meeting->user_id       = get_userid(Session::get('UserId'));
$meeting->save();


-> Last insert id:

$meeting_id = $meeting->id;

$loop = $request->count;

for ($i = 1; $i <= $loop; $i++) {

	$agenda                 = new agenda;
	$agenda->agenda_name    = $request->input('agenda_name_'.$i);
	$agenda->save();
}

Session::flash('meeting_msg', 'Inserted Successfully!'); 

return redirect('admin/meeting');


-> Create Custom Error :

    php artisan make:rule CustomRules
   
 
-> CustomRules.php :

	public function passes($attribute, $value)
	    {
		 if($value!=0){ 
		    return $value;
		 }
	    }

	    public function message()
	    {
		return 'ase error';
	    }
		
		
-> In Controller :

use App\Rules\CustomRules;

$request->validate([

	'select' => ['required', new CustomRules],

]);
		
	
